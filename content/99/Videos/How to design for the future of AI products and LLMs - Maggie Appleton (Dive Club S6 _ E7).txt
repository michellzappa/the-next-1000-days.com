let's play a game which product am I talking about right now first they were named the design tool of the year in 2023 by product hunt and just a few weeks ago they were named the top animation tool in Contra Creator tools Awards give up the product is called Jitter it's like figma but for motion design and it is absolutely blowing up right now for good reason too it is never been easier to create really high quality animations and they even have a nice figma plugin so you can bring your designs in in a single click so if you're still sleeping head to dive. club/ Jitter to create your first animation today that's J TT R okay now on to the episode condensing synthesizing sense making AI is like way more important and interesting than generative AI I feel like everyone's trying to generate stuff and I want more people to try to work on building tools that are focused on like more critical reasoning like more systematic process CES and day-to-day at elicit we want to do serious knowledge work with language models like we want to find ways where we have them do very small specific things and we look very closely at the outputs of those and we check them and then we feed those outputs into another language model course so it's sort of like language model calls all the way down welcome to Dive Club my name is rid and this is where designers never stop learning this week's episode is with Maggie Appleton who's currently leading design at elicit so this this is going to be a deep dive into what it's like designing for large language models we talk about the different types of UI patterns for interacting with AI Maggie's Journey with code and she shares some really interesting big picture ideas but first let's start by learning a little bit more about elicit and Maggie's role as the first designer elicit makes tools for scientific researchers and we are specifically trying to help researchers do a certain process called systematic liter riew which is where if they want to do some new science they want to like research a new drug or a new medical device or a new policy for government they have to go find out all the science that's been done on that in the past they have to be like what's been studied you know where the research gaps like what could I do that would help move this field forward and to do that they sometimes have to read tens of thousands of papers and then figure out exactly what was said in each paper what study was done what the results were and usually this is a process that humans do so they get like five or six people to spend 6 months reading PDFs and writing the results into like a huge Google sheet like a huge Excel file and the founders of elicit they've been in language models and AI for I think decades at this point at least our like main uh CTO co-founder had did this whole PhD on this so like he kind of saw this coming like writing on the wall language models way before the whole hype wave and was like oh we're going to be able to use these things to extract data from huge files do reasoning like really help humans do complex cognitive tasks faster so founded the company initially as more of a research lab experimenting with different ways that we could use language models for serious knowledge work and then landed on literature review as a really good use case for it I think the first Alpha was built in like 2020 and then I saw that as a user and got on board as as the designer because they didn't have a designer at the time but essentially yeah what it does is we we use language models to in a couple minutes extract all this data from tens of thousands of papers into this big spreadsheet that then uh researchers can go check every single answer and we really focus on trying to build architectures around language models that make them truthful and reliable because those are obviously major concerns and major problems but that's a really interesting research problem that our our ml Engineers kind of that's what they're focused on solving so yeah to sum it up it's like we help scientific researchers do this huge literature review process much faster than they could do manually can we talk a little bit more about your role then because it's like not only are you like the solo designer but you're getting ramped up on these really new Cutting Edge meaty technology problems so maybe you could even talk to us a little bit about the earlier stages of your design process like what are some of the ways that you are breaking down these complex problems and getting momentum on New Opportunities so what I joined actually I knew nothing about language models in AI I was like a normal human right and I started getting into it I think it was almost like exactly 9 months before chat GPD came out so it was sort of like a head aead start before the big explosion happened but I got to just get get in and start reading all the research papers and like figuring out what language models were and understanding their all networks and that was really important for me to then be able to once I joined the team understand what was possible like what the limitations are exactly how we have to design the interface to help communicate to users what a language model is which is even kind of debatable like whether we should be doing that I mean we don't explain to them that we're building something in python or typescript or like with a specific server so like why would they need to know what the back end is they just need to be helped to achieve their goal and they need to know that the results they have at the end are reliable or be taken through a process to make them reliable and accurate so it is like learning all about language models really helped me figure out how to design well for them I couldn't have done this job without getting really deep into the technical details of of how this stuff works and in terms of how my process for breaking down the complex stuff most of the complexity is still where it's always been in design which is on the user side like understanding exactly who our users are what workflows they do what every single step in that workflow is which parts are slow and then trying to reason through how we could use language models in in kind of small very pointed ways to like make their process easier and have a human in the loop throughout that whole process is also a big thing we advocate for which lots of other people do that's not our phrase lots of people advocate for human in the loop workflows with language models but we really try to design interfaces that allow people to check their results easily and like guide them through it versus trying to give them a magical answer which I think most most AI startups are trying to do at the moment type into this box and get a whole answer out the other side and we're a lot more like okay you still need to go through this very rigorous process that you know very well but how do we just make that process faster and easier for you can we go even deeper on this I feel like there's a lot to talk about here so like what have you been learning about llms through this research and ramp up process that's influencing the way that you you think strategically about like what the illicit interface should even be when you look at the pace of change with these models and the trajectory of how much better they've gotten in a very short period of time it makes it very difficult to predict the future right none of us are very good at this at the moment because we have no idea even what these models are capable of at the moment I think the way we're using them is just a tiny tiny fraction of what they're going to allow us to do in the future we just haven't explored that full range of things yet one phrase I like from the AI world is people sometimes say we we sort of grew language models rather than it built them like we don't know they're like an organic being that we discovered and we don't know what they can do like we didn't make them for a purpose we made them and now we're like what is this object or what is this like organism type thing so it's really strange because we know they have all this kind of like latent possibility in them but we're not quite sure how to bring that out so in designing with them you're constantly trying to think okay I could certainly make a button and then have a single language model that like does one thing you know goes to open AI or Claude right and like brings back an answer but then we're now starting to see things like AI agent architectures when you get the language model to behave as if it was an agent a you know a being who can like think thoughts and you kind of tell it to do this and you give it access to tools like calculators and web search and like databases for long-term memory and it can like make decisions like pretty reasonable decisions given a goal so even in this world with AI agents and you think about designing an interface you're like well maybe this agent should just generate a UI on demand for the user based on what that specific user needs in that moment versus me as the designer mocking up a very particular drop down menu in figar and we're going to like implement this like very carefully and this is the only interface they'll have access to you start to think what would like a very Dynamic changing interface look like if a model is like controlling it based off a set of Primitives you give it but that's the kind of thing you have to start thinking about well that's not possible now or not really not in a production environment I've seen some prototypes that try to do this but in like a year that might be possible so you start to go well maybe I'm just wasting my time in the present and yet there's no other alternative in the present so you're stuck in this weird limbo of like what's the right choice right now given what will be possible in this in the near future yeah I didn't really think about that cuz we do talk about Dynamic interfaces a lot and it feels like this inevitable outcome and yet it's not there and you're you know operating as a soul designer for a startup where you're already expecting everything to change that's got to be in interesting challenge to try to balance what you believe about the future versus what you are capable of doing now yeah this is the constant struggle because I mean especially in a in a place like Alysa we talk a lot about oh my gosh these models are going to be so capable in the future we have to be ready for when the next model comes out we have to be future proof but at the same time you're still mired in all the difficult day-to-day things that every other designer and developer team is where you're like oh there's a weird bug on the sidebar when you cover in this position and like you know all our drop Shadows are super inconsistent users are confused by the text on this button I go between the incredibly benal day-to-day like normal startup designer stuff right just like when you're the only designer you're trying to do seven Rolls at once and you're doing all of them kind of badly and you're just like juggling you know the Flaming plates or whatever the metaphor is but then you're also having to think about the fact that we're you know this entire process could change tomorrow or like I need to be thinking about how I could be bringing language models in more to like help augment my work or speed me up or like help solve all these tiny annoying problems which they can do when it's in code I don't think we're there yet in terms of language models helping with the design process I at least haven't found any tools or systems specifically designed to make that easier although I'm hopeful that will happen at some point like I could use a lot of help like solo designer like drowning over here you know let's talk a little bit more about the the interface level because I've seen kind of this spectrum of implementation specificity where I'm one one end you have very open-ended UI that in theory can do everything on the other it's actually really defining the actions that AI can help you with here are 10 options click a button kind of thing how do you think about that spectrum and and even more broadly like how are you exploring the different UI patterns for interacting with AI yeah yeah this is one of my favorite soap boxes is like I really I don't want to say hate but I think the current world where many of the AI interfaces are super open-ended right here's a text box like you figure out what to do with it are are sort of misguided or they're like a temporary historical blip that we will get over soon I'm hoping because the like everything's a chat box uh world is you put the onus on the user to figure out what to do with this thing you're like oh it can do anything if you tell a user they can do anything they will do nothing they will type in what's the capital of Uganda and then close the tab or something they just like what what is this thing for like they don't have a goal that they're trying to achieve with it I think even if you give them like inline suggestions or like have a couple buttons it's still not guiding them through a specific workflow to a specific goal I mean I'm being critical here of course there are things searching on the web or very kind of Bas level open-ended stuff that like sure can do a bunch of like simple low-level tasks yeah I guess in this like kind of very simple what what we might call a horizontal interface like one interface that can do many things kind of not not that well versus vertical interfaces this is like a metaphor that I think Joel spolsky first came up with vertical interfaces do a very specific thing really really well think of the software your dentist uses to check which which of your teeth they need to operate on or like the kind of software that a financial accountant would use like they are trying to achieve super specific goals with really well predefined workflows and that you're just trying to help them do that easily with software and I think this is the kind of stuff that is much more interesting to explore with AI and that AI is much more likely to have a big impact in really Advanced professional complex workflow where you can have the language model help in all kinds of interesting ways just being a tiny helper like behind the scenes like suggesting good stuff or like helping find the right data at exactly the right time and handing it to you or like helping you see patterns in masses of data that you're trying to understand I think this is where it's really going to shine I mean AIS are in a way very advanced search across all kinds of things that they have access to and yet people are still kind of overly focused on the fact you can like chat to them like a human which just doesn't seem that interesting to me in terms of helping move whole Industries forward and make all their workflows more efficient and have humans suffer less and having to do really boring Financial or governmental or medical workflows I think this is just all the opportunity feels like it's in the complex stuff to me I like the idea of vertical interfaces a lot because you're right like a lot of the ways or at least the early tools that adopted AI were that they were tools very open-ended do almost anything with them and I have still noticed a trend I believe I was trying to figure out where Notions started I think their drop down now of what ask AI does is now like they have like 15 options in there and it's like that that Trend makes sense right it's like no we need to get we need to put more guard rails in place to help people interact more effectively with AI And yet when you're doing it in a broad open-ended product you get 15 drop downs whereas something like elicit you do have an opportunity to Think Through slightly more opinionated workflows which is probably pretty interesting to think about yeah I mean in ways it makes the job both easier and harder in the sense of like I think if you're designing the AI for notion right you're trying to make it as flexible as possible and you don't know what the end user wants to do because your end users are doing all kinds of things you've got like teachers in there you've got salese you've got I don't know a whole like CRM like the number of use cases because it's infinite that's right their selling point that's what makes them really good software is they can do lots of things for lots of people but then with language models you really the way that they perform well is you do what we call fine tuning so we take like a base model like a gp4 or Claude and then you train it on the exact kind of inputs and outputs it's going to expect to see and then so you say okay here's the kind of user input data you're going to see and here's an ideal output for all of those inputs and then the model learns okay I should really focus on giving you exactly these kind of outputs and that's what makes the answers from it really good when you have like a super specific thing you needed to do you're like okay I'm going to always give you a scientific PDF paper and I want you to always give me a less than 100w summary that like does not hallucinate and I want you to double check your answer and I want you to make sure you don't use too much Jon or if you do explain it give it really specific prompts and really Specific fine-tuning Instructions and then it can perform Super well but if you don't know what that input is or you don't have like a a set of those inputs you know are going to come in you're just kind of using the base model and it's not going to perform as well on very specific tasks I would imagine that you're doing a decent amount of research to see what other products are doing and how other designers are implementing Ai and I do think a lot of the shortcomings are slightly obvious we've talked about a lot of them most of it does tie back to this idea of being too open-ended in my opinion but are there things that you are noticing that are catching your eye or different implementations of AI that have you a little bit more excited yeah this is funny I mean I don't know when this will be released but as of recording two days ago open AI released GPT 40 Omni which is a model that can take in audio and visuals and text and like Blends them all together so this is like a Omni multimodal model which is the way all these models are moving like we all started with language models right just trained on text outputting text and then of course we got more image models like mid Journey more and now the company the foundational companies are learning oh we can blend these all together so that it's a little more like a human right a human who can see and hear and type and so the direction this seems to be going is we're going to have models that can understand facial visual patterns and take in You Know audio text and so that means that we're going to have many more capabilities that are not just it can output text I I have a bias here where I'm friends with the TL draw team which are nominally a whiteboarding app really the world's best whiteboard was like nominally or the world's best drawing tool you can like draw gorgeous arrows like Steve who runs it just he he's an artist by trade but also a developer and just makes the best whiteboarding app but then funnily enough because they had really high quality whiteboarding Primitives they've just like stuck AI into there and now it's one of the best AI software development tools I've seen anywhere because you can draw the wireframe of what you want and then you can just click this button that they called make real and it just writes the code and like gives you an inline app or website that works like you can you can like draw a game and be like okay if I hit this button plus one point if I hit that button negative 1 point and it will set up like a state machine in the background and like keep track of points for you you can set up physics you can be like oh these little guys are jumping up and down you can write annotation text next to the drawing be apply this logic whatever I've described here to this thing and it just does it cuz it's all just visual text reasoning that stuff is wild I am most excited about visual spatial like what happens when we get canvases plus AI to really be able to draw and doodle and like just do this kind of open-ended non-textual exploration I've seen some of those demos on my Twitter feed and I I don't even know what to do with them mentally like I I just see I see it I can see what is happening in this little gift box or whatever and I'm just like what the heck they're kind of crazy and then they have another one where you like draw whatever you want and then it will make the photo realistic image right next to it of what you're drawing this is use control net um to do that it's just wild it's like oh and now this is the best drawing app like anywhere on the market just because I think this is another principle that people who already had really good software Primitives in place high quality ones like notion TL drawer like these kind of things like GitHub they already had the code infrastructure in place they're the ones who are going to do really well because then you just put AI on top of that existing structure that humans already is designed for humans to use well and you just train the models on the that kind of interface to take actions in it and boom you you're winning in the market okay I want to return now to elicit because something that you're saying that I'm trying to kind of like wrestle this tension in my head you know everything we're talking about right now is AI at the output level it's creating imagery it's generating code it's writing text you also have said that language models are are maybe even more interesting as reasoning engines how do you think about like the different capabilities that spectrum and like how does it actually translate into what the heck you draw in figma for Elissa so this is a new drum I've started banging is condensing synthesizing sens making AI is way more important and interesting than generative AI I'm definitely saying that from a bias point of view of like I'm much more interested in exploring tools that help us find the signal and the noise we already have too much information to deal with how do we use AI to help us find the right stuff at the right time make sense of it move our thought process along act as critical reasoning Partners like these are use cases that are very compelling to me and there is some value to generative stuff like you know mid journey is really interesting TL draws really is really interesting but I also think there's a lot of danger Badness over here you know like we just generate 6,000 SEO articles and like flood flood the web which is already happening there goes all you know quality information or finding anything of use on the web and there go all the human connections and I have whole talk on on how much I hate the flood of generative AI onto the web so I feel like everyone's trying to generate stuff and I want more people to try to work on building tools that are focused on more critical reasoning like more systematic processes more how do we use LMS to do very interesting cognitive work and day to-day at elicit this I mean this philosophy very much was G kind of handed to me by the founders when I joined this was their whole thing it's like we want to do serious knowledge work with language models we want to find ways where we have them do very small specific things and we look very closely at the outputs of those and we check them and then we feed those outputs into another language model call so it's sort of like language model calls all the way down in this compositional stack where you say okay you know in this paragraph figure out if it mentions this keyword you know if it does get a second language model to check that okay if that's true then like rank these paragraphs by importance you get it to do all these small composition tasks that can add up to very impressive complex outputs you could the goal in the future is that you have a language model just do a whole literature review for you it finds all the relevant papers it filters out the irrelevant ones it reads every paper meaning it kind of like extracts the right data it like figures out which ones had maybe the highest effect size or like impact score and then it summarizes everything down into a nice two pager that just tell you something like okay here's everything we know about child malnutrition in the world right now now and like all the best ways to solve it and just it just has done a bunch of really difficult cognitive work for you this is like the dream so when it comes to designing it elicit a lot of what we're doing is trying to think about how to move closer to that goal and in the meantime we still are keeping humans in the loop while that's not possible or while language models can't do that level of like complex compositional reasoning we're like okay well how could we keep humans in here to still get to that really valuable output but like they're still helping along the way checking and they're the ones you know um screening down papers and like making sure the extracted data is right but with an eye to like at some point we want to be able to remove humans from parts of this so every UI you know that we design is like okay for now there's you know you hover over this cell and you like see a confidence score level for like what the language model thinks whether this is right or not you have like an approve I checked this one kind of box but hopefully in the future we could just slowly get rid of that stuff pass it down to like a more streamlined workflow but still visible still where you could check all the language models calculations and reasoning just to make sure they're actually right and that they're not just like hallucinating stuff okay so I'm listening to you talk and something that is kind of happening in my brain is like man it's almost difficult to explore in figma without having some understanding of like what's possible with these models and historically even if a designer has never coded before you still have like a rough sense because we use websites we use web apps all the time we kind of intrinsically know what's possible but that's not necessarily the case especially when you're in a startup environment where you're trying to anticipate where things are going to be going so I'd like to talk a little bit more about your Learning Journey and and how we can maybe make that applicable for someone because I'm sure there's a person listening right now that's like okay this is very interesting I can see how this is a big deal now what like where do I even start if I want to explore this further I've gone on a very particular journey in being a designer that is very developer designer hybrid I when I started doing design very quickly was like well I don't want to hand off this figma design to someone else to implement cuz like they might not do it right or like I just want to I want to be I want to be the one like doing the magic like you know when I hover over this button I want to see exactly what happens and then I want to go tweak what happens I don't want to do a figma prototype I need you know working code so I very quickly just taught well I didn't quickly teach myself but I made a very concerted effort of learning front-end web development because I wanted to implement my own designs and I just got a kick out of it writing real code and watching it run and being in the browser and seeing things move and animate feels like magic to me it still does very addicting I just will stay up till 3:00 a.m. just for tweaking the CSS just so so good I've never known a design career where I make figma files and hand them off the vast majority of my work I'm committing code in GitHub usually I write a lot of documents ahead of time to like figure out all the complex stuff right get everyone aligned make sure we know what all the user stories are all the problems all the edge cases get the developers on board but then once we're okay we kind of think we know the shape of the solution I'll mock up a bit in figma but I'll I'll move to front end code really quickly and then just send people preview links to PRS being like okay here's the preview link of how it could work like this and especially with language models you also need the results to be coming in you can't fake that stuff as much in in figma so it just helps to be in an environment with live working data and you can be like okay you you can resize the browser on this thing you know what happens oh we forgot the focus State all of that live real browser environment stuff matters a lot to me so I've only ever known design work as someone who's working in code so I think I have a very different perspective to like frankly real designers at like bigger companies on like proper teams with processes I I am from a different world to them let's say for what it's worth it's my favorite world too like being the sole designer where I get to like actively commit CSS is one of my fa favorite roles maybe we could zoom out just slightly and talk a little bit about this trend because I know you know not only are you writing code in your day-to-day job but you're also like actively thinking about design engineering and this kind of trend that we're seeing online so what thoughts do you have there and and like how is it actually impacting the way that you not only approach your practice now but like what type of software creative you want to be in the future this is funny the whole design engineer I like don't know what to think of it anymore it was like I came across this word and other people have claimed like creative technologist was the previous name for this and I read it and I went oh there's a designer who also does engineering like that must be me but I looked at everyone else using that label and it seems to be the community is more centered around people who are do very Advanced like interface animations are really good at kind of like cool cool interactive animations but also maintain like design system libraries in the front end so like they're more maintaining components and kind of thinking about holistic technical Design Systems so my understanding is that's how that word is being used currently to like mean design engineer but I still think of it in my head as like well designer who does engineering you know read the label kind of thing so the way I use it to like think about my own career is just that I take my engineering skills maybe not as seriously as my design skills like I still think I should try to be leveling up my design skills more than any other area but I also want to be leveling up in my development skills so this is where like I still we can get into this like ironically like spend a fair amount of time trying to learn new Frameworks or libraries or like oh I saw a cool interaction pattern like can I reproduce that myself I'm still trying to invest in that side of my skills I'm trying to learn a bit about databases I want to figure out how to build a full app you know thinking about the product all the way through to like the back end just so that I have a more holistic understanding of what it means to be a software designer I just don't want it to only mean I make interface mockups inigma I want it to mean like I understand what software is end to end like I understand everything from like you look at the users and their problems in the marketplace and then all the way through to what is the backend object relation map and what Primitives do you have that make these two end up meeting at the middle in the interface so that's my interpretation of it but I think most design engineer job postings would have a different take hey guys real quick if you know me then you know I love products so I want to take just 30 seconds to tell you about three of my favorites now any time that I'm designing and building a website you better believe that I'm going to use framer I made the switch recently and I'm never going back now once it's time to animate my designs and showcase my work that's when I'm going to use Jitter it's like figma only for motion design and every step of the way I'm going to be using raycast constantly it's the Cornerstone of how I use my computer and the way that I stay in flow while I work now I hand selected framer raycast and Jitter to partner with me so that I could do these interviews fulltime so if you want to show them some love it would mean a lot okay now on to the rest of the episode I want to zoom in on one part of of this kind of thing that we're orbiting around in this conversation is you say the word learn a lot and it reminds me of something that SEO said in a past episode where he talked about like the time to proficiency for someone being the greatest indicator of basically how high their ceiling is and when I listen to you talk it's quite clear that you're pretty good good at learning Maggie so can you just talk to us about that even at a high level doesn't matter if it's about llms or web Frameworks what have you learned about the the way to go from zero to Wi on new skill set or a new area of Interest yeah that's funny you pulled out that quote because I watched that episode and I wrote that one down I have like a space repetition system where I just put in stuff that's like interesting or like open questions I'm thinking about and I wrote down that Soo quote Soo is very smart but I was like oh what a good what a good like rule of th like people someone's time to proficiency and I was like oh I I hope I would be one of those people but I don't know I think you are I think you are I'm just going to say right now I think you are I definitely in a good way I think always assume that I am kind of Clueless so I I put a lot of pressure on myself to be like okay I know nothing I'm not a proper designer I'm not a proper developer like I need to like learn as much as possible I need to be like scouting out all the people who I think are best at this thing and and then do a lot of like okay you know what are they tweeting what's on their website but trying to figure out like what are they actually doing dayto day and I go do things like DM them and be like hey what are you doing day today what do you spend your time on because and and I think I've also been lucky to have access to people who are like more senior designers or senior developers and either ask them directly on Zoom calls or like working up close with them pay a lot of attention to exactly what they're doing on a sort of detailed level okay you're like writing in a bunch of python commands what framework is this sitting next to ml Engineers I found really helpful in the beginning just sitting and just watching what they're doing and just being like okay there it's like 40 screens open here there's like some giant process running in the background like can you just give me the lowdown on what's going on so I found that very useful is like detailed attention to hour by hour tasks of people who are very proficient or professional in a thing ironically maybe not ironically sadly I find trying to Google for the top articles on any subject is pretty quickly useless you can do it and you can spend 40 minutes clicking through all those top links and you'll just be like this seems prettyy shallow no detail in here this is very high level this is very how to be a great designer we we one do the design process like two like talk to your users but there's there's no detail in there there's no here is a specific outline for the interview you should do with your user tomorrow you know so I try to find material that is like very tactical dense details on the ground gam tape if you can find someone who's like live streamed their process that's amazing because the high LEL stuff is almost always too vague to be useful I love game tape as a refence game tape you're totally right I mean it's it's unfortunately that is the reality especially with the newer advancements that you know every time something new happens in AI you get a flood of just buzzword regurgitation just nonsense I was even on YouTube the day after the open AI announcement oh my gosh it's just like 40 thumbnails that are the exact same thing saying nothing figuring out how to have a spidey sense for like the amount of information density and a piece of content is like a big po of it you like you'll find an article or YouTube video and like within 30 seconds of skimming it you're like oh no no no there's nothing here but then there's other ones you come across right someone will have done these are usually hidden in weird places like you might find like a GitHub repo with like a bunch of like prompt engineering prompts or like someone's guide to how they're using a collab notebook that was big in ml like a lot of people write these big collab notebooks with their whole ml chain broken down of how they're doing some big process and just going through that you're suddenly like oh wow okay I'm like seeing the real detail of how this works here this is not like some handwavy summary okay let's zoom out even further now because I know you're thinking a lot about big picture stuff so what are some of the long-term implications for this new technology and how do you think that that might impact design more broadly I don't know I've been having a couple months of something existential thrill and Terror or something of trying to trying to understand where this is going and I think it's easy to assume timel are always shorter than they're going to be right like I think it's easy to be like okay in a year I'll be able to write some text into like co-pilot or cursor and it will just make me a whole react tap and it will be like perfect and there will be no bugs right and and it'll just be like I won't need a developer anymore I think in re reality the reality is way way more complex than we think it's going to be really and there's the thing of like maybe the first 90% of building an app a language model will be able to do a lot of basic stuff if you're like build me a sidebar you know build me pretty standard settings page like all that kind of stuff I think pretty quickly we could automate but that last 10% that's going to be the hard stuff I think I mean and that's also a lot of the glue work like okay well now how do you like set up a back end and connect these two and get a server up and running and what if you get like a massive users and like it flattens your server like there's just all the complex difficult things of engineering will still exist and this is the work I think developers are going to have to end up doing is like this higher level you know really architecting apps well really thinking care about data structures like the the hard the hard stuff of engineering but that grunt work stuff that we're currently having to do like I still have to make a drop down menu and like make sure it like works on focus and stuff I'm excited that that will all get automated away I think a lot of the like low-level busy work will just disappear within one to two years I want to talk about this both through the more developer lens and the design lens CU I I think they're related but also in very different points so maybe to start how do you think about where the threshold for technical literacy exists that would allow designers to take advantage of ai's ability to automate that grunt work you're talking about to get very specific and tactical if I was me 10 to 15 years ago let's say starting out I I would go learn JavaScript react HTML CSS not necessarily react but like that is the main framework right now I would make sure I understood the shape of code in those languages and look at a lot of source code and try to build stuff myself with the help of AI I would like get Hub co-pilot I would get vs code and learn how to get like a very basic website set up and I would just start trying to prompt it to be like okay build me a sidebar with these links in it okay now add a drop- down menu here okay now I want to change the entire color scheme to like dark mode how would I do that and I would just spend a a lot of time building with co-pilot and AI to figure out what it's capable of but also it will just teach you how to build at least basic apps and websites I just think the technical literacy of understanding the shape of an app to understand how components like are linked together how pages are built how you write CSS how The Styling and the and the interactivity from JavaScript all come together for me as a designer has been incredibly critical it helps me understand the affordances of the web I mean I only build for the web of course if you build for something like iOS apps is different then you're looking at the affordances of Swift and the and the iOS platform but I need to understand the material I'm working with in the same way that like Carpenters understand wood really well right and like architects stand if you're going to build a five-story building like you need to know what materials you're going to put in the support pipe so that it doesn't fall down to me that is what code is even if the thing you are designing is like pixels and figma or seems to be to you what you are actually designing is a live interactive system in a very specific runtime environment and a very specific Computing environment that has affordances that you can only discover if you are like working in the native medium of it because there a time the web can do that we don't take advantage of because designers don't know what's possible I think this idea of understanding the materials is becoming more prevalent especially in these conversations I've been having I want to push on it like even more like actually how does that help you like you're maybe just exploring inigma your earlier stages you haven't graduated to preview builds yet how does this understanding of the materials translate to what you are doing and unlock new opportunities for you I will definitely put a caveat on this and that there are many types of designers and if you are someone who is more user research like call or maybe information architecture like that kind of traditional ux stuff you're right you probably don't need as much of that you're more focused on like who's the user what's their workflow like figuring out what abstract representations will serve that user and get them to their goal well so I think that's a whole side of design that you're right like it doesn't matter as much but if you're talking about someone who's genuinely designing where is the button and what does it look like like what happens when they hover near the button on the button what happens when they tab into the button could that button expand to become a different element now that we're inside that element can you use the position of the mouse and the proximity of where it is in the browser make something else happen this gets into the detailed material bits of it that I think matter to me when I'm thinking through design stuff is the web has all these apis or like as I said like affordances like it can take in Voice or audio and you can have the interface react to What audio it's hearing you can use yeah Mouse position you can use like force touch press amounts like you could use you know more keyboard inputs it's just like you begin to see the web differ it's like oh this is like a very dynamic system that has all kinds of inputs I can react to in different ways but you the only way to play with that is to be in the live environment itself I'm of course talking about very experimental software here if you're like I don't know I'm designing an e-commerce site right and there's like a bunch of like products on the front page and there's like a nap like sure I mean this is a solved problem already you can do that in figma I guess because we've built this so many times that we have components that are reusable for this but I will say that is the stuff that AI will be able to automate well anything that we already have a large amount of historical data on is the stuff that is going to be great at at creating so if we're like hey we've all made 6,000 models and we've all made 6,000 whatever like slide over sidebars it's just going to do that stuff in a Flash and so as a designer you no longer need to do that work so what is the work of the designer in a world where that stuff's been automated and that gets into well what are like novel interface patterns we've never tried before how could we design interfaces that like serve these user needs really well that we've never solved before and software that's where like I think future design work gets really interesting let's talk a little bit more about that then because if more traditional ux designers are going to develop this technical literacy and code becomes easier for more people like how does that let's play that out like how does that impact the role of designer in the broader landscape I have a couple like weird weird predictions here right so like let's let's imagine the wellsware yeah the cost of development drops to almost zero or so cheap that anyone can like prompt up at least a very simple app let's just say okay people can log into this app they can like create ad and delete things they can edit stuff they can like maybe track data over time they can like access apis on the web it's kind of like standard stuff let's say you no longer need lots of developers to do that I think in this world we get a huge explosion of software just so much more software than we had before and ironically because teams might be smaller or we might have more like solo preneurs the level of design quality of the software might drop quite a lot because if you are no longer in the mindset of like okay I need to hire like four developers and a designer and they're going to like you know spend 2 years building this thing you just can whip this stuff up in a couple days you won't involve a designer at all and you will just go with what you think is like I don't know the best the best interface and the best like way to do things which if you're not a trained designer is likely to be bad like most of us have pretty bad design intuitions to start off with unless we like train that muscle so there's a world where design gets much worse in the software world but then designers become more valuable because we have way more softare Ware we need to design way more of this software and a lot of design work can't be automated the like understanding users bit like abstract conceptual thinking bit at least not yet so core ux skills become super valuable and like exploratory interface stuff becomes more valuable but the middle bit that a lot of us do now which is like implementing the boring sidebar or like designing the boring sidebar that's all automated it's like the two edges that like I think become quite valuable yeah that's interesting because I think we talk a lot about how like you know AI is going to free designers to think more strategically and on higher level problems but I think a lot of that conversation happens within the silos of the existing role and if you zoom out like actually at a landscape level no like the demand for design will be pulled towards the extremes where actually you will have to be focused on the more advanced more exploratory problems I like that angle I I definitely do think it's an expanding pie right I don't worry that designers aren't going to aren't going to have work to do but I think the the type of work they will look very different so there is this fear of like a lot of us will probably have to shift skill sets a lot or like really change how we work even me right being like Oh I'm like a you know hybrid front-end designer developer there's a good chance my a lot of my skill set will like totally be automated in a couple years and I'll have to go much deeper on understanding information architecture and user research or get more into the like much more engineer exploratory side of things I could I could be kind of at Ground Zero in a couple years what is that like how do you deal with that possib ility oh well I tweeted something that it was what a terrible historical moment I still have to learn all this kind of very boring code syntax and like new libraries and like understand the mental models of how these things work today if I want to build stuff I have to go learn this stuff but I know that it's going to be automated in like a couple years and so I'm just oh I'm in the worst I have to do this if I want to like achieve these outcomes in the short term but long term this isn't going to pay off me it's not like these are going to pay dividends for years that I know exactly how to make a prototype and view like it doesn't doesn't work so I don't know I I just kind of go okay well the future's probably going to be good I'm sure I'll be fine I doubt I'll be like living on the streets maybe I won't be like a millionaire that's kind of fine yeah just it's like a very British attitude to like well it's probably going to be fine I don't know what if you want some impressive life like okay let's switch our lens for a second and talk more about design advancements because I think the ways that AI can impact the day-to-day of people writing code is much easier at least for me to think about it's more concrete it's already happening whereas you know you alluded to this earlier in the conversation it's not happening for design like it's not in web design a little bit still a lot of it kind of feels like a toys for product designers outside of generic back and forth in text with Chachi BT it's almost nothing so how do you think about the potential entry points for AI are there areas that you're focusing on or things that even like you you just really want to happen I know I keep waiting for these companies to pop up I think I have to give them another year or two there's a lot I do a lot of work of just like looking at the mass of user data and trying to synthesize into like specific things we should do which is a perfect use case for AI right we have a constant stream of things coming into the customer support inbox we've got user interviews going on that have transcripts we have sales calls going on that have transcripts I want to put all this stuff in one big pool and I want the AI to be like hey okay not only here's the most commonly mentioned things cuz sometimes those aren't Sol able right sometimes people are just like oh I my job changed and I don't need your service anymore that's you know not as relevant even if that's the most mentioned thing but it could also be like oh you know these three people have mentioned this we've never considered a feature like that you know maybe it understands my feature set to and it makes a proposal for me like a one pager it's like hey given what I know about your interface and given what your users are asking for like had you considered this what I'm suggesting is quite a complex cognitive task right it kind of has to do some faux reasoning language models do not genuinely reason but the thing that they do looks an awful lot like reasoning and could be used as a proxy for reasoning it can say like okay if I was pretending to be a really smart product manager or really smart product designer here's what I might suggest based on the data I'm seeing even if it just tracked all of that over time and just every now and again suggested hey what about this product feature or hey what if we made this small change to like make this easier that kind of stuff is like a good entry point there's a lot it could do in terms of like helping me write up documents again this is like a huge thing that takes a lot of time I think a lot of this does at the moment require a lot of human cognitive labor like I have to think really hard like well what are the user stories what are the requirements for each of those stories and then go into like okay what are the possible solutions for each of these a lot of that just takes a lot of brain power and time again suggesting possible like solutions to things oh good thumbs up thanks um Mac that was helpful um speaking of world class AI implementations exactly this is this is what AI does is um is this is what we're using it for but it's great but like think we could do more complex things is like one of the points um so yeah I think there's a lot to do in like suggesting things synthesizing data helping me keep track of things even like you know I'll like write specs and then just like forget about them they just disappear into the void if notion AI could be like hey two weeks ago you wrote this spec I've updated it for you do you want to take another look that kind of stuff yeah I I really like that it reminds me of something that Brad Frost was talking about too where this idea of like being able to contribute towards this knowledge base of how we build product different guidelines not even necessarily at a product strategy standpoint but like more of an interface level even being able to interface with those guidelines and ask it questions rather than having to like remember things or systematize every single element it's similar to some of the stuff that you're doing in elicit in that it's like very constrained in terms of like the type of questions that you're asking and I could see that being like an interesting application as well but it does it kind of everything still feels a little bit far off yeah I bet I wonder if then if Brad had thoughts on this cuz like actually Design Systems should be another huge entry point right it's like it's saying hey you've like made three different drop downs do you want to make this into one drop down right or just like hey your accessibility is like off in these four areas can I just fix them for you like one click it sets a PR in it fixes the accessibility issues like everyone wins right those are the kind of like easy end points I'm waiting for people to build products for can I ask you one more hypothetical tooling question because you've kind of extended Your Role a little bit into to this very front of the front endend world and you almost sit in a tooling Gap a little bit where like figma doesn't do anything for you in that world you're not as deeply embedded into like the the heavy engineering do you have any thoughts about what the most valuable future of tooling would even look like for you and like how you can be equipped as someone who does have some technical understanding and yet is still doing the majority of your work work in a design authoring tool I think actually the tooling we have right now might be helping people like me the most cuz it's like the co-pilots right where you like you're in a code editor vs code and you can just be like hey you know I'm trying to change this component to add this like new button and it needs a new state attached to it and I want this to happen when it'ss loading and you know after 3 seconds I wanted to time out and do something else you can just type that all in plain English natural language and it just updates the code for you and you do have to check the code right like you're the QA tester but people in my position like we have the best tools at the moment because that's it's just helping me along but it's still it's like limited at the moment there are lots of things I ask you to do and it totally fails it just like face plants so I have some really bad layout bug and it cannot fix it and I'm like this is this should be simple we've got some like weird thing happening with flex boox and like this is not rocket science and it cannot fix it and I have to spend hours fixing it so it still falls down in lots of ways that makes me be like H we're we're almost in the dream world and yet so far away before I let you go I have a couple of one-off questions the first is you something you've kind of become known for is this practice of writing through digital gardening man I get DMS all the time from designers who want to put themselves out there more want to start thinking in public it's a little bit intimidating to make that jump so could you talk a little bit more about your experience and maybe you could even share a little bit about how it's impacted your career I love digital gardening everyone should should start a digital Garden or a blog or whatever you want to call it I think I was lucky in that I started doing this when I was like too young to have much ego or sense of importance of myself which I hope is still true like I still don't think I'm like a very important or like notable person so if I write something that is incorrect which I don't you know try not to do I try to make sure I'm putting truthful statements out and like interesting work and like saying things worth saying but even if I make mistakes and like get ripped apart on Hacker News it doesn't matter that much cuz I'm like not I'm not that important it's like it's totally fine right versus I bet if you're maybe someone higher up at some like you know brand name company where it matters you probably have more hesitation about writing online because people expect things of you I think it's helpful to assume that nobody expects anything of you and that you're not held to some like ridiculously high standard and that you don't you don't actually matter which like in the grand scheme of history is usually true so that's like a freeing bit right like you can write online and it's not a big deal and like you can make mistakes and if you have a digital Garden you can fix your mistakes by updating your posts and like improving them in the future I I've I always say this is like writing publicly online has made me a much better designer because I have to think very carefully about problems and like articulate them well and that turns out to be one of the most important skills in design is like naming the problem and articulating it well to your stakeholders and like getting everyone on board just the core skill of the whole thing and then it has also meant I've had lots of job and career opportunities that I have like no right having just people when you write clearly online think you are way more competent than you are and like way better at your job than you are they're like wow you wrote this really thoughtful essay on this totally unrelated thing and so I assume you are really good at like seeing your product level design work I'm laughing because I have like the exact same experience so I you know you know we're just FR speaking of career opportunities though before I let you go you are hiring a senior designer at elit so can you talk a little bit about what would make a candidate someone that you would just be like yes we got to have them on the team sure so yeah we're definitely looking for someone like senior staff principal sort of you have good design experience because I'll say we are solving really hard problems like you can't copy other people like no one has done this interface before so like you have to just make it up from first principles or like reason your way through it so yeah we're looking for someone who can like own whole design projects like from the ground up think from like the product level all the way through to understanding the technical stuff we have a lot of ML and AI expertise in house so it's also a really good place to get up to speed on that if you're like okay I know I want to be working in something with AI but like I don't know anything myself we kind of want someone to like help bring in More Design expertise and and in exchange they get to get up to speed on on all the ml coolness and work with people who are worldclass at doing it which is really great so that's that's kind of the profile someone who's worked on tooling like Advanced tooling complex workflows like not simple websites but like okay people are making stuff you know we have like tool bars going on or we've got infinite canvases that kind of stuff would be great awesome well Maggie this is been amazing thank you so much for coming on today and sharing a little bit about what you're thinking about for anyone listening I mean it would be just an incredible opportunity to work alongside you so definitely apply if you are considering it thanks again for taking the time and yeah we'll link to your digital Garden everyone should definitely check out your thoughts there's a lot more than we could possibly have covered in this hour so thanks yeah thank you for having me on it was wonderful to have this space to talk about this stuff you can have casual conversations with your friends of like what if what if all the developers get replaced but it's really interesting to be able to think talk out loud and think it through with someone and hopefully if people watching have thoughts they can like angrily tweeted us about it hey it's rid don't forget if you want to go even deeper each week I send an email out to over 10,000 designers with bonus resources and key takeaways from these conversations so head to dive. club/ to sign up okay I'll see you next week